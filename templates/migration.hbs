import { DynamoDBClient } from '@aws-sdk/client-dynamodb';
import { DynamoDBDocumentClient, QueryCommand, TransactWriteCommand } from '@aws-sdk/lib-dynamodb';

import { Migrator } from '../../framework/migrator';
import { Operations } from '../../framework/interfaces/Operations';
import { DynamodbScriptTracker } from '../../framework/dynamodb-script-tracker';

const ddbClient = new DynamoDBClient({ region: process.env.AWS_REGION });

const documentClient = DynamoDBDocumentClient.from(ddbClient, {
  marshallOptions: { convertEmptyValues: true, removeUndefinedValues: true },
});

export const scriptTracker = new DynamodbScriptTracker(documentClient, {
  scriptName: '{{scriptName}}',
  scriptStore: 'migration-seed-scripts-table',
});

const operations: Operations = {
  /**
  * A required read function that retrieves items in chunks.
  */
  read: async () => {
    return { items: [], nextPageToken: null };
  },
  /**
  * An optional transform function that applies transformations to an array of items.
  */
  transform: (data: any) => data,
  /**
  * A required write function that writes a batch of items to a target resource.
  */
  write: async (data: any) => {
  },
};

export const migration = new Migrator(scriptTracker, operations, false);
